# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.5 on Sun May 13 11:47:41 2007 from D:\personal\src\GuitarPortfolio\branches\db_revival\gui\guitarportfolio.wxg

import wx
from wx.lib.pubsub import Publisher

from objs import signals, songfilter
from db import songs_peer
import db.engine


# begin wxGlade: dependencies
# end wxGlade

class InfoPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: InfoPanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.__infoEdit = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        self.__applySelection = wx.ComboBox(self, -1, choices=["Save To Database", "Revert From Database"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.__applyToDB = wx.Button(self, wx.ID_APPLY, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.__OnApply, self.__applyToDB)
        # end wxGlade

        Publisher().subscribe(self.__OnSongSelected, signals.SONG_VIEW_SELECTED)
        Publisher().subscribe(self.__OnSongSelected, signals.APP_READY)

    #---------------------------------------------------------------------------
    def __set_properties(self):
        # begin wxGlade: InfoPanel.__set_properties
        self.SetSize((382, 251))
        self.__infoEdit.SetFont(wx.Font(8, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, ""))
        self.__applySelection.SetSelection(0)
        # end wxGlade

    #---------------------------------------------------------------------------
    def __do_layout(self):
        # begin wxGlade: InfoPanel.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_14 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(self.__infoEdit, 1, wx.ALL|wx.EXPAND, 5)
        sizer_14.Add(self.__applySelection, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_14.Add(self.__applyToDB, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_4.Add(sizer_14, 0, wx.EXPAND|wx.ALIGN_RIGHT, 0)
        self.SetSizer(sizer_4)
        # end wxGlade

    #---------------------------------------------------------------------------
    def __OnSongSelected(self, message):
        """ We received an select signal for the song """
        # en/disable the view
        song = message.data
        self.__infoEdit.Enable(song <> None)
        self.__applySelection.Enable(song <> None)
        self.__applyToDB.Enable(song <> None)
        if song:
            self.__infoEdit.SetValue(song._information)
        else:
            self.__infoEdit.SetValue('')

    #---------------------------------------------------------------------------
    def __OnApply(self, event): # wxGlade: InfoPanel.<event_handler>
        """ Revert or apply the text. Revert will restore the information from the class
            else it will store the information in the database and update all views """
        s = songfilter.Get()._selectedSong        
        if self.__applySelection.GetSelection() == 0:
            s._information = self.__infoEdit.GetValue()
            sp = songs_peer.SongPeer(db.engine.GetDb())
            sp.Update(s)
        else:
            # revert
            self.__infoEdit.SetValue(s._information)
            
        # always revert to save action
        self.__applySelection.SetSelection(0)        

# end of class InfoPanel



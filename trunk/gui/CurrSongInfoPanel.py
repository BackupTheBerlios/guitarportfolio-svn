# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.5 on Sun May 13 11:47:41 2007 from D:\personal\src\GuitarPortfolio\branches\db_revival\gui\guitarportfolio.wxg

import wx
import wx.xrc as xrc
import wx.html as html
import xmlres
import time

from wx.lib.pubsub import Publisher
from objs import songs
import wikiparser, linkfile, viewmgr

songinfo = """
No song info available
"""

# TODO: The Wiki HTML parser should be a generic component, so that other 
# HTML windows will also react the same on the markup and links that can 
# be executed. Generic functionality should include:
# - Encapsulation of the WikiParser
# - Clicking on external links should open them in a browser
# - Clicking on internal links should select a song when needed
# - Also the generic song functionality should be inside the browser component
# - Back and forward handling should remember pages visited but based upon song
#   or wiki name.

class CurrSongInfoPanel(wx.Panel):
    def __init__(self, parent, id = -1):
        pre = wx.PrePanel()
        xmlres.Res().LoadOnPanel(pre, parent, "SongInfoPanel")
        self.PostCreate(pre)

        self.__songInfo = xrc.XRCCTRL(self, "ID_SONGINFO")
        if "gtk2" in wx.PlatformInfo:
            self.__songInfo.SetStandardFonts()

        self.Bind(html.EVT_HTML_LINK_CLICKED, self.__OnLinkClicked, self.__songInfo)
            
        Publisher().subscribe(self.__OnClearSong, viewmgr.SIGNAL_CLEAR_DATA)
        Publisher().subscribe(self.__OnSelectSong, viewmgr.SIGNAL_SONG_SELECTED)
        Publisher().subscribe(self.__OnSelectSong, viewmgr.SIGNAL_SONG_UPDATED)
        
    # --------------------------------------------------------------------------
    def __OnSelectSong(self, message):
        """ Select signal when a new song is selected by SongList, we react on it """
        # replace all items and display text
        parser = wikiparser.WikiParser()
        if message.data == None:
            self.__songInfo.SetPage(parser.Parse(songinfo))
        else:
            if viewmgr.Get()._selectedSong == message.data:                   
                self.__songInfo.SetPage(parser.Parse(message.data._information))

    #---------------------------------------------------------------------------
    def __OnLinkClicked(self, event):
        """ Execute the HTML link in an external browser window """
        tag = event.GetLinkInfo().GetHref()
        
        if linkfile.is_valid_external_link(tag):
            print "Executing link: " + tag
            linkfile.execute_uri(tag)

    #---------------------------------------------------------------------------
    def __OnClearSong(self, message):
        self.__songInfo.SetPage(wikiparser.WikiParser().Parse(songinfo))        

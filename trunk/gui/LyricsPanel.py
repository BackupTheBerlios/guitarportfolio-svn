# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.5 on Sun May 13 11:47:41 2007 from D:\personal\src\GuitarPortfolio\branches\db_revival\gui\guitarportfolio.wxg

import wx
from wx.lib.pubsub import Publisher
from objs import signals, songfilter
import db.engine
from db import songs_peer

# begin wxGlade: dependencies
# end wxGlade

class LyricsPanel(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: LyricsPanel.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.__lyrics = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        self.__applySelection = wx.ComboBox(self, -1, choices=["Save To Database", "Revert From Database"], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.__applyButton = wx.Button(self, wx.ID_APPLY, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.__OnApply, self.__applyButton)
        # end wxGlade

        Publisher().subscribe(self.__OnSongSelected, signals.SONG_VIEW_SELECTED)

    # --------------------------------------------------------------------------
    def __set_properties(self):
        # begin wxGlade: LyricsPanel.__set_properties
        self.__lyrics.SetFont(wx.Font(9, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, ""))
        self.__applySelection.SetSelection(0)
        # end wxGlade

    # --------------------------------------------------------------------------
    def __do_layout(self):
        # begin wxGlade: LyricsPanel.__do_layout
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        sizer_16 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15.Add(self.__lyrics, 1, wx.ALL|wx.EXPAND, 5)
        sizer_16.Add(self.__applySelection, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_16.Add(self.__applyButton, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_15.Add(sizer_16, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_15)
        sizer_15.Fit(self)
        # end wxGlade

    # --------------------------------------------------------------------------
    def __OnApply(self, event): # wxGlade: LyricsPanel.<event_handler>
        """ Revert or apply the text. Revert will restore the information from the class
            else it will store the information in the database and update all views """
        s = songfilter.Get()._selectedSong        
        if s:
            if self.__applySelection.GetSelection():
                # revert
                self.__lyrics.SetValue(s._lyrics)
            else:
                # update only the basic fields
                s._lyrics = self.__lyrics.GetValue()
                sp = songs_peer.SongPeer(db.engine.GetDb())
                sp.Update(s, all = False)
            
        # always revert to save action
        self.__applySelection.SetSelection(0)    

    # --------------------------------------------------------------------------
    def __OnSongSelected(self, message):
        """ We received an select signal for the song """
        # en/disable the view
        song = message.data
        self.__lyrics.Enable(song <> None)
        self.__applySelection.Enable(song <> None)
        self.__applyButton.Enable(song <> None)
        if song:
            self.__lyrics.SetValue(song._lyrics)
        else:
            self.__lyrics.SetValue('')        
        

# end of class LyricsPanel



# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.5 on Sun May 13 11:47:41 2007 from D:\personal\src\GuitarPortfolio\branches\db_revival\gui\guitarportfolio.wxg

import wx
from wx.lib.pubsub import Publisher
import viewmgr

import db.engine
from db import songs_peer
import xmlres
import wx.xrc as xrc

# begin wxGlade: dependencies
# end wxGlade

class LyricsPanel(wx.Panel):
    def __init__(self, parent, id = -1):
        pre = wx.PrePanel()
        xmlres.Res().LoadOnPanel(pre, parent, "SongLyricEditPanel")
        self.PostCreate(pre)

        self.__lyrics = xrc.XRCCTRL(self, "ID_LYRICS_EDIT")
        self.__applySelection = xrc.XRCCTRL(self, "ID_ACTION_SELECT")
        self.__applyButton = xrc.XRCCTRL(self, "wxID_APPLY")

        self.Bind(wx.EVT_BUTTON, self.__OnApply, self.__applyButton)

        Publisher().subscribe(self.__OnSongSelected, viewmgr.SIGNAL_SONG_SELECTED)
        Publisher().subscribe(self.__OnSongSelected, viewmgr.SIGNAL_CLEAR_DATA)

        self.__applySelection.SetSelection(0)

    # --------------------------------------------------------------------------
    def __OnApply(self, event):
        """ Revert or apply the text. Revert will restore the information from the class
            else it will store the information in the database and update all views """
        
        s = viewmgr.Get()._selectedSong        
        if s:
            if self.__applySelection.GetSelection():
                # revert the lyrics
                self.__lyrics.SetValue(s._lyrics)
            else:
                # update only the basic fields
                s._lyrics = self.__lyrics.GetValue()
                sp = songs_peer.SongPeer(db.engine.GetDb())
                sp.Update(s, all = False)
                
                # issue a song update to the audience
                viewmgr.signalSongUpdated(s)
            
        # always revert to save action
        self.__applySelection.SetSelection(0)    

    # --------------------------------------------------------------------------
    def __OnSongSelected(self, message):
        """ We received an select signal for the song """
        # en/disable the view
        song = message.data
        self.__lyrics.Enable(song <> None)
        self.__applySelection.Enable(song <> None)
        self.__applyButton.Enable(song <> None)
        if song:
            self.__lyrics.SetValue(song._lyrics)
        else:
            self.__lyrics.SetValue('')

